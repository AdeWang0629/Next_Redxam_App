name: Lighthouse

on:
  push:
    branches:
    - main
    - staging

  pull_request: # run on all PRs

jobs:
  lighthouse:
    name: Run Lighthouse audit

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Get npm cache directory
        id: npm-cache-dir
        working-directory: ./packages/frontend
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

      - name: Install yarn
        run: npm i -g yarn

      # Install dependancies
      - name: Install dependancies for application
        working-directory: ./packages/frontend
        run: yarn install

      - name: Install Lighthouse CLI with npm
        working-directory: ./packages/frontend
        run: yarn global add @lhci/cli@0.8.x

      - name: Build site
        working-directory: ./packages/frontend
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: yarn build

      - name: Run Lighthouse CI
        run: lhci autorun
        working-directory: ./packages/frontend
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
