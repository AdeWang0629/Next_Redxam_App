{
  "name": "appengine-typescript",
  "description": "An example TypeScript app running on Google App Engine.",
  "version": "0.0.1",
  "private": true,
  "license": "Apache Version 2.0",
  "author": "Google Inc.",
  "engines": {
    "node": "14.x.x"
  },
  "scripts": {
    "start": "NODE_ENV='development' SERVICE='server' PORT=5005 tsnd -r tsconfig-paths/register src",
    "start:vaults": "NODE_ENV='development' PORT=5010 SERVICE='vaults' tsnd -r tsconfig-paths/register src",
    "start:binance": "NODE_ENV='development' PORT=5011 SERVICE='binance' tsnd -r tsconfig-paths/register src",
    "start:wallets": "NODE_ENV='development' PORT=5012 SERVICE='wallets' tsnd -r tsconfig-paths/register src",
    "start:balance": "NODE_ENV='development' PORT=5013 SERVICE='balance' tsnd -r tsconfig-paths/register src",
    "start:portfolio": "NODE_ENV='development' PORT=5014 SERVICE='portfolio' tsnd -r tsconfig-paths/register src",
    "start:webhooks": "NODE_ENV='development' PORT=5015 SERVICE='webhooks' tsnd -r tsconfig-paths/register src",
    "start:all": "npm run start && npm run start:vaults && npm run start:binance && npm run start:wallets && npm run start:balance && npm run start:portfolio && npm run start:webhooks",
    "start:prod": "NODE_ENV='production' SERVICE='server' PORT=3000 tsnd -r tsconfig-paths/register src",
    "start:prod:max": "NODE_ENV='production' SERVICE='server' PORT=5005 tsnd -r tsconfig-paths/register src",
    "start:prod:vaults": "NODE_ENV='production' PORT=3001 SERVICE='vaults' tsnd -r tsconfig-paths/register src",
    "start:prod:binance": "NODE_ENV='production' PORT=3002 SERVICE='binance' tsnd -r tsconfig-paths/register src",
    "start:prod:wallets": "NODE_ENV='production' PORT=3003 SERVICE='wallets' tsnd -r tsconfig-paths/register src",
    "start:prod:balance": "NODE_ENV='production' PORT=3004 SERVICE='balance' tsnd -r tsconfig-paths/register src",
    "start:prod:portfolio": "NODE_ENV='production' PORT=3005 SERVICE='portfolio' tsnd -r tsconfig-paths/register src",
    "start:prod:webhooks": "NODE_ENV='production' PORT=3006 SERVICE='webhooks' tsnd -r tsconfig-paths/register src",
    "start:prod:all": "npm run start:prod && npm run start:prod:vaults && npm run start:prod:binance && npm run start:prod:wallets && npm run start:prod:balance && npm run start:prod:portfolio && npm run start:prod:webhooks",
    "start:dev": "NODE_ENV='development' SERVICE='server' tsnd -r tsconfig-paths/register src",
    "start:dev:testnet": "TYPE_CHAIN=testnet&&NODE_ENV='development'&&tsnd -r tsconfig-paths/register src",
    "build:ts": "tsc && tscpaths -o dist -s src -p tsconfig.json",
    "build:assets": "cp -r src/assets src/emails dist",
    "build:schema": "cp src/schema/schema.graphql dist/schema",
    "build:docker": "docker build . --tag \"redxam-api:latest\"",
    "build": "npm run build:ts && npm run build:assets && npm run build:schema",
    "lint": "eslint --fix .",
    "changeacc": "NODE_ENV='development' tsnd -r tsconfig-paths/register src/cli/changeacc",
    "changeacc:prod": "NODE_ENV='production' tsnd -r tsconfig-paths/register src/cli/changeacc"
  },
  "dependencies": {
    "@types/node": "^14.14.7",
    "express": "^4.16.3",
    "typescript": "^4.0.0"
  },
  "devDependencies": {
    "mocha": "^9.0.0",
    "wait-port": "^0.2.7",
    "@types/express": "^4.16.0",
    "chai": "^4.2.0",
    "tslint": "^6.0.0",
    "typescript": "^4.0.0"
  }
}
